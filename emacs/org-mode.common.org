Save every 30s of inactivity
#+begin_src emacs-lisp
  (add-hook 'auto-save-hook 'org-save-all-org-buffers)
#+end_src

Open agenda on startup
 Show agenda on startup by deefault
#+begin_src emacs-lisp
  ;;(org-agenda-list)
  ;;(switch-to-buffer "*Org Agenda*")
#+end_src

This is all the global configuration that I need for my workflows
#+begin_src emacs-lisp
;; This changes the start date to the correct day, as previously it was behind about 3 days
;; A caveat is that old, scheduled items will indeed begin showing up in my agendas
(setq org-agenda-start-day nil)
;; Hide tasks that are scheduled in the future.
(setq org-agenda-todo-ignore-scheduled 'future)
;; Use "second" instead of "day" for time comparison.
;; It hides tasks with a scheduled time like "<2020-11-15 Sun 11:30>"
(setq org-agenda-todo-ignore-time-comparison-use-seconds t)
;; Hide the deadline prewarning prior to scheduled date.
(setq org-agenda-skip-deadline-prewarning-if-scheduled 'pre-scheduled)
#+end_src

#+begin_src emacs-lisp
(setq org-agenda-custom-commands
      '(
        ("n" "Agenda / INTR / PROG / NEXT / GOAL"
         ((agenda "" nil)
          (todo "INTR" nil)
          (todo "PROG" nil)
          (todo "NEXT" nil)
          (todo "WAITING" nil)
          )
         ((org-agenda-span 'day))
         )
        ("m" "Everything"
         ((agenda "" nil)
          (todo "GOAL" nil)
          (todo "PROJECT" nil)
          (todo "INTR" nil)
          (todo "PROG" nil)
          (todo "NEXT" nil)
          (todo "WAITING" nil)
          )
         ((org-agenda-span 'day))
         )
        )
      )

;; Add a timestamp when task is set to 'done'
(setq org-log-done 'time)
#+end_src

Old agenda here
(setq org-agenda-custom-commands

      '(("a" "All tasks"
         ((alltodo "")))
("n" "Agenda, goals, all TODO"
         ((agenda ""
                  ((org-agenda-skip-function
                    '(org-agenda-skip-entry-if 'todo '("WAITING")))
                   (org-agenda-overriding-header "Agenda")))
          (todo "WAITING"
                ((org-agenda-overriding-header "Items in status WAITING")))
          (tags-todo "goal"
                     ((org-agenda-overriding-header "Goals")))
          (tags-todo "someday"
                     ((org-agenda-overriding-header "Someday")))
          ))))

I want to add this for my new workflow:
;; Customized view for the daily workflow. (Command: "C-c a n")
'(org-agenda-custom-commands
  '(("n" "Agenda / INTR / PROG / NEXT"
     ((agenda "" nil)
      (todo "INTR" nil)
      (todo "PROG" nil)
      (todo "NEXT" nil))
     nil)))
     
Don't split windows when displaying agenda
#+begin_src emacs-lisp
  (setq org-agenda-window-setup 'current-window)
#+end_src
  
Hook for toggling visual word wrap
#+begin_src emacs-lisp
  (add-hook 'text-mode-hook 'turn-on-visual-line-mode)
#+end_src
  
Change ellipsis
Alt: ▼, ↴, ⬎, ⤷, ⤵, and ⋱
#+begin_src emacs-lisp
  (setq org-ellipsis "↴")
#+end_src


#+begin_src emacs-lisp
;; TODO keywords.
(setq org-todo-keywords
      '((sequence "TODO(t)" "NEXT(n)" "PROG(p)" "INTR(i)" "GOAL(g)" "PROJECT(r)" "WAITING(w@)" "|" "DONE(d)" "CANCELLED(c@)")))

;; Old config here
;; (setq org-todo-keywords
;; '((sequence "TODO(t)" "IN-PROGRESS(p!)" "WAITING(w@)" "|" "DONE(d!)" "CANCELLED(c@)")))

#+end_src
